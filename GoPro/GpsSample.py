# automatically generated by the FlatBuffers compiler, do not modify

# namespace: GoPro

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class GpsSample(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 20

    # GpsSample
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # GpsSample
    def Latitude(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # GpsSample
    def Longitude(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(4))
    # GpsSample
    def Altitude(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # GpsSample
    def Speed2d(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(12))
    # GpsSample
    def Speed3d(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))

def CreateGpsSample(builder, latitude, longitude, altitude, speed2d, speed3d):
    builder.Prep(4, 20)
    builder.PrependFloat32(speed3d)
    builder.PrependFloat32(speed2d)
    builder.PrependFloat32(altitude)
    builder.PrependFloat32(longitude)
    builder.PrependFloat32(latitude)
    return builder.Offset()
