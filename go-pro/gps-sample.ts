// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class GpsSample {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GpsSample {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

latitude():number {
  return this.bb!.readFloat32(this.bb_pos);
}

longitude():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
}

altitude():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
}

speed2d():number {
  return this.bb!.readFloat32(this.bb_pos + 12);
}

speed3d():number {
  return this.bb!.readFloat32(this.bb_pos + 16);
}

static sizeOf():number {
  return 20;
}

static createGpsSample(builder:flatbuffers.Builder, latitude: number, longitude: number, altitude: number, speed_2d: number, speed_3d: number):flatbuffers.Offset {
  builder.prep(4, 20);
  builder.writeFloat32(speed_3d);
  builder.writeFloat32(speed_2d);
  builder.writeFloat32(altitude);
  builder.writeFloat32(longitude);
  builder.writeFloat32(latitude);
  return builder.offset();
}

}
